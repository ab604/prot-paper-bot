# Workflow name
name: "Bsky Bot"
# Define when the workflow should run
on:
  schedule:
    - cron: '25 5,17 * * *'  # run the bot twice a day at 0525 and 1725 UTC
  workflow_dispatch:  # Allow manual triggering

# Set permissions for the workflow
permissions:
  contents: write  # Add explicit permission to write to repository

jobs:
  bsky-updates:
    name: bot
    runs-on: ubuntu-latest
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      # Check out the repository code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: gautamkrishnar/keepalive-workflow@v2 # using the workflow with default settings
        
      # Set up R environment
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
          use-public-rspm: true
          
      # Install renv for R package management
      - name: Install renv
        run: |
          install.packages('renv')
          renv::init(force = TRUE)
        shell: Rscript {0}
      
      # Cache R packages to speed up future runs
      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-
      
      # Cache Ubuntu system dependencies
      - name: Cache system dependencies
        uses: actions/cache@v4
        id: cache-sys-deps
        with:
          path: ~/.apt-cache
          key: ${{ runner.os }}-apt-${{ hashFiles('**/apt-packages.txt') }}
      
      # Install Ubuntu system dependencies if not cached
      - name: Install system dependencies
        if: steps.cache-sys-deps.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev
          mkdir -p ~/.apt-cache
          sudo cp /var/cache/apt/archives/*.deb ~/.apt-cache/
      
      # Restore Ubuntu system dependencies from cache
      - name: Restore system dependencies
        if: steps.cache-sys-deps.outputs.cache-hit == 'true'
        run: |
          sudo cp ~/.apt-cache/*.deb /var/cache/apt/archives/
          sudo apt-get install -y libcurl4-openssl-dev
      
      # Restore R environment from renv.lock file
      - name: Restore renv environment
        run: |
          renv::restore()
        shell: Rscript {0}
      
      # Install additional R packages
      - name: Install additional R packages
        run: |
          Sys.setenv(GITHUB_PAT = "${{ secrets.GITHUB_TOKEN }}")
          renv::install(c("jsonlite", "dplyr", "atrrr"))
          renv::snapshot()
        shell: Rscript {0}
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        
      # Run the bot script
      - name: Run bot
        run: |
          tryCatch({
            source('bot.R')
          }, error = function(e) {
            message('Error in bot.R: ', e$message)
            quit(status = 1)
          })
        shell: Rscript {0}
        env:
          ATR_PW: ${{ secrets.ATR_PW }}
        
      # Upload logs if the job fails
      - name: Upload logs
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: r-logs
          path: |
            *.Rout
